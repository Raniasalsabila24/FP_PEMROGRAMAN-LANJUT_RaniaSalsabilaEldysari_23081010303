#include <stdio.h>
#include <string.h>

#define MAX_MAKANAN 100
#define PANJANG_NAMA 50

void bubbleSort(char makanan[][PANJANG_NAMA], int n) {
    char temp[PANJANG_NAMA];
    for (int i = 0; i < n - 1; i++) {
        for (int j = 0; j < n - i - 1; j++) {
            if (strcmp(makanan[j], makanan[j + 1]) > 0) {
                strcpy(temp, makanan[j]);
                strcpy(makanan[j], makanan[j + 1]);
                strcpy(makanan[j + 1], temp);
            }
        }
    }
}

int main() {
    int jumlah;
    char makanan[MAX_MAKANAN][PANJANG_NAMA];
    char cari[PANJANG_NAMA];
    int found = 0;

    printf("Masukkan jumlah makanan favorit: ");
    scanf("%d", &jumlah);
    getchar(); // Membersihkan buffer

    printf("Masukkan nama makanan favorit:\n");
    for (int i = 0; i < jumlah; i++) {
        printf("Makanan ke-%d: ", i + 1);
        fgets(makanan[i], PANJANG_NAMA, stdin);
        makanan[i][strcspn(makanan[i], "\n")] = 0; // Menghapus newline
    }

    bubbleSort(makanan, jumlah);

    printf("\nDaftar makanan favorit setelah diurutkan:\n");
    for (int i = 0; i < jumlah; i++) {
        printf("%d. %s\n", i + 1, makanan[i]);
    }

    printf("\nApakah Anda ingin mencari makanan? (1 untuk Ya, 0 untuk Tidak): ");
    int pilihan;
    scanf("%d", &pilihan);
    getchar(); // Membersihkan buffer

    if (pilihan == 1) {
        printf("Masukkan nama makanan yang ingin dicari: ");
        fgets(cari, PANJANG_NAMA, stdin);
        cari[strcspn(cari, "\n")] = 0; // Menghapus newline

        for (int i = 0; i < jumlah; i++) {
            if (strcmp(makanan[i], cari) == 0) {
                printf("Makanan '%s' ditemukan pada urutan ke-%d dalam daftar.\n", cari, i + 1);
                found = 1;
                break;
            }
        }
        if (!found) {
            printf("Makanan '%s' tidak ditemukan dalam daftar.\n", cari);
        }
    }

    return 0;
}
